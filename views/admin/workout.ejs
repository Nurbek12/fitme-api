<%- include('../head'); -%>

    <body>
        <div id="app" v-cloak>
            <v-app>
                <v-navigation-drawer app color="grey darken-4" v-model="drawer" flat :mini-variant="drawer" permanent>
                    <v-list nav dense dark>
                        <v-list-item-group>
                            <v-list-item v-for="(link, i) in links" :key="i" link :href="`/admin${link.url}`">
                                <v-list-item-icon v-if="!drawer">
                                    <v-icon v-text="link.icon"></v-icon>
                                </v-list-item-icon>
                                <v-tooltip right v-else color="grey darken-4">
                                    <template v-slot:activator="{ on, attrs }">
                                        <v-list-item-icon v-bind="attrs" v-on="on">
                                            <v-icon v-text="link.icon"></v-icon>
                                        </v-list-item-icon>
                                    </template>
                                    <span>{{link.title}}</span>
                                </v-tooltip>
                                <v-list-item-title>{{link.title}}</v-list-item-title>
                            </v-list-item>
                        </v-list-item-group>
                    </v-list>
                </v-navigation-drawer>

                <v-app-bar app elevation="0" color="grey lighten-3">
                    <v-app-bar-nav-icon @click.stop="drawer = !drawer"></v-app-bar-nav-icon>
                    <v-toolbar-title>Схема питания</v-toolbar-title>
                    <v-spacer></v-spacer>

                    <v-btn icon color="red accent-2">
                        <v-icon>mdi-cog</v-icon>
                    </v-btn>
                    <v-badge color="red accent-2" dot content="1" overlap>
                        <v-btn icon color="deep-purple lighten-2">
                            <v-icon>mdi-bell</v-icon>
                        </v-btn>
                    </v-badge>
                    <v-btn icon color="deep-purple lighten-2">
                        <v-icon>mdi-account</v-icon>
                    </v-btn>
                </v-app-bar>

                <v-main app style="background-color: #eee;">
                    <v-container fluid>
                        <v-data-table :headers="headers" :items="desserts" :search="search" class="elevation-2">
                            <template v-slot:top>
                                <div class="d-flex py-3 px-3">
                                    <v-row class="d-flex justify-space-between">
                                        <v-col cols="6" sm="6" md="6">
                                            <v-text-field v-model="search" append-icon="mdi-magnify" label="Поиск" solo
                                                hide-details dense></v-text-field>
                                        </v-col>
                                        <v-col cols="4" sm="6" md="6" class="d-flex justify-end">
                                            <v-spacer></v-spacer>
                                            <v-dialog v-model="dialog" max-width="400px">
                                                <template v-slot:activator="{ on, attrs }">
                                                    <v-btn dark class="mb-2" v-bind="attrs" v-on="on">
                                                        Добавлять
                                                    </v-btn>
                                                </template>
                                                <v-card>
                                                    <v-form ref="form" v-model="valid" lazy-validation>
                                                        <v-card-title>
                                                            <span class="text-h5">{{ formTitle }}</span>
                                                        </v-card-title>

                                                        <v-card-text>
                                                            <v-container>
                                                                <v-row>
                                                                    <v-col cols="12">
                                                                        <v-text-field v-model="editedItem.title"
                                                                            label="Название" outlined hide-details dense
                                                                            :rules="nameRules">
                                                                        </v-text-field>
                                                                    </v-col>
                                                                    <v-col cols="12">
                                                                        <v-select :items="tags" label="Уровень тренировки" outlined hide-details
                                                                            dense v-model="editedItem.level"
                                                                            :rules="[v => !!v || 'Укажите уровень']">
                                                                        </v-select>
                                                                    </v-col>
                                                                    <v-col cols="12">
                                                                        <v-select :items="exercises" label="Тренировки" outlined hide-details multiple
                                                                            dense v-model="editedItem.exercises" item-value="_id" item-text="title">
                                                                        </v-select>
                                                                    </v-col>
                                                                    <v-col cols="12">
                                                                        <v-text-field v-model="editedItem.metadescription"
                                                                            label="Короткое описание"
                                                                            outlined hide-details dense
                                                                            :rules="nameRules">
                                                                        </v-text-field>
                                                                    </v-col>
                                                                    <v-col cols="12">
                                                                        <div class="d-flex align-center">
                                                                            <v-avatar>
                                                                                <img :src="urlImage">
                                                                            </v-avatar>
                                                                            <v-file-input label="Добавить фото" outlined dense
                                                                                v-model="file" hide-details>
                                                                            </v-file-input>
                                                                        </div>
                                                                    </v-col>
                                                                    <v-col cols="12">
                                                                        <v-textarea outlined name="input-7-4"
                                                                            :rules="nameRules" label="Описание"
                                                                            v-model="editedItem.description"
                                                                            hide-details>
                                                                        </v-textarea>
                                                                    </v-col>
                                                                </v-row>
                                                            </v-container>
                                                        </v-card-text>

                                                        <v-card-actions>
                                                            <v-spacer></v-spacer>
                                                            <v-btn color="blue darken-1" text @click="close">
                                                                Отмена
                                                            </v-btn>
                                                            <v-btn color="blue darken-1" :disabled="!valid" text
                                                                @click="validate">
                                                                Сохранять
                                                            </v-btn>
                                                        </v-card-actions>
                                                    </v-form>
                                                </v-card>
                                            </v-dialog>
                                            <v-dialog v-model="dialogDelete" max-width="400px">
                                                <v-card outlined tile>
                                                    <v-card-title class="text-h5">
                                                        Вы уверены, что хотите удалить этот элемент?
                                                    </v-card-title>
                                                    <v-card-text>Внимание. После того, как информация будет удалена, она
                                                        не может быть восстановлена!</v-card-text>
                                                    <v-card-actions>
                                                        <v-spacer></v-spacer>
                                                        <v-btn color="blue darken-1" text @click="closeDelete">Cancel
                                                        </v-btn>
                                                        <v-btn color="blue darken-1" text @click="deleteItemConfirm">OK
                                                        </v-btn>
                                                    </v-card-actions>
                                                </v-card>
                                            </v-dialog>
                                        </v-col>
                                    </v-row>
                                </div>
                            </template>
                            <template v-slot:item.image="{ item }">
                                <v-avatar rounded>
                                    <img :src="`/files/${item.image}`">
                                </v-avatar>
                            </template>
                            <template v-slot:item.author="{ item }">
                                <span>{{item.author?.name}}</span>
                            </template>
                            <template v-slot:item.date="{ item }">
                                <span>{{ date(item._id) }}</span>
                            </template>
                            <template v-slot:item.public="{ item }">
                                <v-chip :color="item.public?'green':'red'" dark small>
                                    {{ item.public?'public':'private' }}
                                </v-chip>
                            </template>
                            <template v-slot:item.actions="{ item }">
                                <v-menu offset-y>
                                    <template v-slot:activator="{ on, attrs }">
                                        <v-btn v-bind="attrs" v-on="on" icon>
                                            <v-icon>mdi-dots-horizontal</v-icon>
                                        </v-btn>
                                    </template>
                                    <v-list dense>
                                        <v-list-item link @click="viewItem(item._id)">
                                            <v-list-item-title>View</v-list-item-title>
                                        </v-list-item>
                                        <v-list-item link @click="editItem(item)">
                                            <v-list-item-title>Edit</v-list-item-title>
                                        </v-list-item>
                                        <v-list-item link @click="deleteItem(item)">
                                            <v-list-item-title>Delete</v-list-item-title>
                                        </v-list-item>
                                    </v-list>
                                </v-menu>
                            </template>
                        </v-data-table>
                        <v-snackbar v-model="snackbar" :timeout="2000">
                            {{ snacktext }}
                            <template v-slot:action="{ attrs }">
                                <v-btn :color="snackstatus?'green':'red'" text v-bind="attrs" @click="snackbar = false">
                                    Закрывать
                                </v-btn>
                            </template>
                        </v-snackbar>
                    </v-container>
                    <!-- <v-dialog v-model="dialogproduct" max-width="400px">
                        <v-card>
                            <v-tabs>
                                <v-tab>Добавить</v-tab>
                                <v-tab>Добавить новое</v-tab>

                                <v-tab-item>
                                    <v-form ref="form2" v-model="valid2" lazy-validation>
                                        <v-card-title>
                                            <span class="text-h5">Добавить продукт</span>
                                        </v-card-title>

                                        <v-card-text>
                                            <v-container>
                                                <v-row>
                                                    <v-col cols="12">
                                                        <v-select :items="itemDetailtimes" item-text="title"
                                                            item-value="el" label="Время еды" outlined hide-details
                                                            dense v-model="productTime"
                                                            :rules="[v => !!v || 'Укажите категорию']">
                                                        </v-select>
                                                    </v-col>
                                                    <v-col cols="12">
                                                        <v-select :items="productList" item-text="title"
                                                            item-value="_id" label="Время еды" outlined hide-details
                                                            dense v-model="planProducts" multiple clearable
                                                            :rules="[v => !!v || 'Укажите категорию']">
                                                        </v-select>
                                                    </v-col>
                                                </v-row>
                                            </v-container>
                                        </v-card-text>

                                        <v-card-actions>
                                            <v-spacer></v-spacer>
                                            <v-btn color="blue darken-1" text @click="close1">
                                                Отмена
                                            </v-btn>
                                            <v-btn color="blue darken-1" :disabled="!valid2" text @click="validate2">
                                                Сохранять
                                            </v-btn>
                                        </v-card-actions>
                                    </v-form>
                                </v-tab-item>

                                <v-tab-item>
                                    <v-form ref="form1" v-model="valid1" lazy-validation>
                                        <v-card-title>
                                            <span class="text-h5">Добавить продукт</span>
                                        </v-card-title>
    
                                        <v-card-text>
                                            <v-container>
                                                <v-row>
                                                    <v-col cols="12">
                                                        <v-text-field v-model="product.title" label="Название" outlined
                                                            hide-details dense :rules="nameRules">
                                                        </v-text-field>
                                                    </v-col>
                                                    <v-col cols="12">
                                                        <v-text-field v-model="product.portion" label="1 порция гр." min="0"
                                                            outlined hide-details dense type="number" :rules="nameRules">
                                                        </v-text-field>
                                                    </v-col>
    
                                                    <v-col cols="12">
                                                        <div class="d-flex align-center">
                                                            <v-avatar>
                                                                <img :src="urlImage">
                                                            </v-avatar>
                                                            <v-file-input label="Добавить фото" outlined dense
                                                                v-model="file" :rules="[v => !!v || 'Укажите изображение']"
                                                                hide-details>
                                                            </v-file-input>
                                                        </div>
                                                    </v-col>
                                                </v-row>
                                            </v-container>
                                        </v-card-text>
    
                                        <v-card-actions>
                                            <v-spacer></v-spacer>
                                            <v-btn color="blue darken-1" text @click="close1">
                                                Отмена
                                            </v-btn>
                                            <v-btn color="blue darken-1" :disabled="!valid1" text @click="validate1">
                                                Сохранять
                                            </v-btn>
                                        </v-card-actions>
                                    </v-form>
                                </v-tab-item>
                            </v-tabs>
                        </v-card>
                    </v-dialog> -->
                    
                    <!-- <v-dialog v-model="dialogView" max-width="600px">
                        <v-card outlined tile>
                            <v-card-title class="text-h5">
                                План питания
                            </v-card-title>
                            <div class="d-flex flex-column">
                                <v-card flat v-for="time in itemDetailtimes" :key="time.title">
                                    <v-card-text>
                                        exercises
                                    </v-card-text>
                                </v-card>
                            </div>
                            <v-card-actions>
                                <v-btn color="blue darken-1" text @click="closeView">
                                    Отмена
                                </v-btn>
                                <v-btn color="blue darken-1" @click="dialogproduct=true" text>
                                    Добавить
                                </v-btn>
                                <v-spacer></v-spacer>
                                <v-menu offset-y>
                                    <template v-slot:activator="{ on, attrs }">
                                        <v-btn icon v-bind="attrs" v-on="on">
                                            <v-avatar color="brown" size="30">
                                                <img :src="'/files/'+vItem?.author?.image">
                                            </v-avatar>
                                        </v-btn>
                                    </template>
                                    <v-list>
                                        <v-list-item v-for="(a,ind) of vItem?.author" :key="ind">
                                            <v-list-item-title>{{ind}}: {{a}}</v-list-item-title>
                                        </v-list-item>
                                    </v-list>
                                </v-menu>
                            </v-card-actions>
                        </v-card>
                    </v-dialog> -->
                </v-main>
            </v-app>
        </div>
        <script>
            new Vue({
                el: '#app',
                data: () => ({
                    drawer: null,
                    links: [
                        { title: 'Дашбоард', icon: 'mdi-home', url: '/dashboard' },
                        { title: 'Пользователи', icon: 'mdi-account', url: '/users' },
                        { title: 'Тренеры', icon: 'mdi-account-school', url: '/trainers' },
                        { title: 'Админы', icon: 'mdi-account-tie-hat', url: '/admins' },
                        { title: 'Продукт', icon: 'mdi-baguette', url: '/products' },
                        { title: 'Схема питания', icon: 'mdi-hamburger', url: '/mealplans' },
                        { title: 'Финансы', icon: 'mdi-currency-usd', url: '/finance' },
                        { title: 'Упражнение', icon: 'mdi-dumbbell', url: '/exercises' },
                        { title: 'Тренировки', icon: 'mdi-karate', url: '/workout' },
                        { title: 'Feedback', icon: 'mdi-message-processing', url: '/feedback' },
                    ],
                    tags: [
                        'Начальный',
                        'Средний',
                        'Высщий',
                    ],
                    valid: false,
                    valid1: false,
                    valid2: false,
                    dialog: false,
                    dialogproduct: false,
                    dialogDelete: false,
                    dialogView: false,
                    snackbar: false,
                    snacktext: '',
                    snackstatus: true,
                    headers: [
                        { text: 'Картина', value: 'image', sortable: false, align: 'start', },
                        { text: 'Название', value: 'title' },
                        { text: 'Описание', value: 'description', sortable: false },
                        { text: 'Короткое описание', value: 'metadescription', sortable: false },
                        { text: 'Уровень тренировки', value: 'level' },
                        { text: 'Автор', value: 'author' },
                        { text: 'Дата', value: 'date' },
                        { text: 'Действия', value: 'actions', sortable: false },
                    ],
                    desserts: [],
                    search: '',
                    editedIndex: -1,
                    editedId: null,
                    file: null,
                    productList: [],
                    product: {
                        title: '',
                        description: '',
                        approach: '',
                        filename: '',
                    },
                    productItem: {
                        title: '',
                        description: '',
                        approach: '',
                        filename: '',
                    },
                    editedItem: {
                        author: '637b849e0929e130da87c3c8',
                        title: '',
                        description: '',
                        metadescription: '',
                        level: '',
                        exercises: [],
                    },
                    defaultItem: {
                        author: '637b849e0929e130da87c3c8',
                        title: '',
                        description: '',
                        metadescription: '',
                        level: '',
                        exercises: [],
                    },
                    nameRules: [
                        v => !!v || 'Укажите поля',
                    ],
                    vItem: {},

                    productTime: '',
                    planProducts: [],
                    model: '',
                    exercises: []
                }),

                computed: {
                    formTitle() {
                        return this.editedIndex === -1 ? 'Добавить' : 'Редактировать'
                    },
                    urlImage() {
                        if (this.file) {
                            return URL.createObjectURL(this.file)
                        } else {
                            return '/files/nophoto.jpg'
                        }
                    }
                },

                watch: {
                    dialog(val) {
                        val || this.close()
                    },
                    dialogproduct(val) {
                        val || this.close1()
                    },
                    dialogDelete(val) {
                        val || this.closeDelete()
                    },
                    dialogView(val) {
                        val || this.closeView()
                    },
                },

                created() {
                    this.initialize()
                    this.getAllExers()
                },

                methods: {
                    validate() {
                        if (this.$refs.form.validate()) {
                            this.save();
                        }
                    },
                    validate1() {
                        if (this.$refs.form1.validate()) {
                            this.saveProduct();
                        }
                    },
                    validate2() {
                        if (this.$refs.form2.validate()) {
                            this.addProduct(this.planProducts);
                        }
                    },
                    openSnackbar(text, status) {
                        this.snackbar = true;
                        this.snacktext = text;
                        this.snackstatus = status;
                    },

                    async initialize() {
                        const { data } = await axios.get('/training/all');
                        if (data.status) {
                            this.desserts = data.result;
                        }
                        const products = await axios.get('/training/all')
                        if(products.data.status){
                            this.productList = products.data.result;
                        }
                    },

                    async viewItem(id) {
                        this.dialogView = true;
                        const { data } = await axios.get(`/training/find/${id}`)
                        if (data.status) {
                            console.log(data.result);
                            this.vItem = data.result;
                        }
                    },
                    getTimeMealPlan(n) {
                        switch (n) {
                            case 1: return ['Завтрак', 'breakfast'];
                            case 2: return ['Обед', 'dinner'];
                            case 3: return ['Ужин', 'supper'];
                            default: return ['', ''];
                        }
                    },

                    date(d) {
                        return (new Date(parseInt(d.toString().substring(0, 8), 16) * 1000)).toString().slice(0, 24);
                    },

                    editItem(item) {
                        this.editedId = item._id;
                        this.editedIndex = this.desserts.indexOf(item)
                        this.editedItem = Object.assign({}, item)
                        this.dialog = true
                    },

                    deleteItem(item) {
                        this.editedId = item._id;
                        this.editedIndex = this.desserts.indexOf(item)
                        this.editedItem = Object.assign({}, item)
                        this.dialogDelete = true
                    },

                    async deleteItemConfirm() {
                        const { data } = await axios.delete(`/training/delete/${this.editedId}`);
                        if (data.status) {
                            this.desserts.splice(this.editedIndex, 1)
                        }
                        this.openSnackbar(data.message, data.status)
                        this.closeDelete()
                    },

                    close() {
                        this.dialog = false
                        this.$nextTick(() => {
                            this.editedItem = Object.assign({}, this.defaultItem)
                            this.editedIndex = -1
                            this.editedId = null;
                            this.file = null;
                        })
                    },
                    close1() {
                        this.dialogproduct = false
                        this.$nextTick(() => {
                            this.product = Object.assign({}, this.productItem)
                            this.file = null;
                            this.planProducts = [];
                            this.productTime = '';
                        })
                    },

                    closeDelete() {
                        this.dialogDelete = false
                        this.$nextTick(() => {
                            this.editedItem = Object.assign({}, this.defaultItem)
                            this.editedIndex = -1
                            this.editedId = null;
                            this.file = null;
                        })
                    },
                    closeView() {
                        this.dialogView = false
                        this.$nextTick(() => {
                            this.vItem = null
                            this.planProducts = [];
                            this.productTime = '';
                        })
                    },

                    async getAllExers(){
                        const {data} = await axios.get('/exercise/all');
                        if(data.status){
                            this.exercises = data.result;
                        }
                    },

                    async saveProduct() {
                        const formdata = new FormData();
                        Object.keys(this.product).map(key => {
                            formdata.append(key, this.product[key])
                        })
                        if (this.file) {
                            formdata.set('filename', Date.now() + '_' + this.file.name)
                            formdata.append('file', this.file)
                        }
                        const { data } = await axios.post('/training/add/', formdata);
                        if (data.status) {
                            this.addProduct([data.result._id])
                        }
                        this.openSnackbar(data.message, data.status)
                        this.close1()
                    },

                    async save() {
                        const formdata = new FormData();
                        Object.keys(this.editedItem).map(key => {
                            formdata.append(key, this.editedItem[key])
                        })
                        if (this.file) {
                            formdata.set('filename', Date.now() + '_' + this.file.name)
                            formdata.append('file', this.file)
                        }
                        if (this.editedIndex > -1) {
                            const { data } = await axios.put(`/training/edit/${this.editedId}`, formdata);
                            if (data.status) {
                                Object.assign(this.desserts[this.editedIndex], data.result)
                            }
                            this.openSnackbar(data.message, data.status)
                        } else {
                            const { data } = await axios.post('/training/add/', formdata);
                            if (data.status) {
                                this.desserts.push(data.result)
                            }
                            this.openSnackbar(data.message, data.status)
                        }
                        this.close()
                    },

                    async addProduct(items) {
                        const { data } = await axios.put(`/training/addexer/${this.vItem._id}`, { items })
                        if (data.status) {
                            this.vItem[this.productTime] = data.result[this.productTime];
                            this.close1();
                        }
                    },
                },

                vuetify: new Vuetify()
            })
        </script>
    </body>

    </html>